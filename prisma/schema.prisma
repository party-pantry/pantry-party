// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String?
  password  String
  houses    House[]
}

model House {
  id        Int      @id @default(autoincrement())
  userId    Int
  name      String
  address   String?
  storages  Storage[]

  user      User     @relation(fields: [userId], references: [id])
}

model Storage {
  id        Int      @id @default(autoincrement())
  houseId   Int
  name      String?
  type      String
  stocks    Stock[]

  house     House    @relation(fields: [houseId], references: [id]) 
}

model Ingredient {
  id        Int      @id @default(autoincrement())
  name      String
  stocks    Stock[]
}

enum Unit {
  OUNCE
  POUND
  GRAM
  KILOGRAM
  MILILITER
  LITER
  FLUID_OUNCE
  CUP
  PINT
  QUART
  GALLON
  TEASPOON
  TABLESPOON
  BAG
  CAN
  BOTTLE
  BOX
  PIECE
  SACK
}

model Stock {
  id            Int      @id @default(autoincrement())
  ingredientId  Int?
  storageId     Int
  custom_name   String?
  quantity      Float
  unit          Unit

  ingredient    Ingredient? @relation(fields: [ingredientId], references: [id])
  storage       Storage     @relation(fields: [storageId], references: [id])
  @@unique      ([ingredientId, storageId])
  @@unique      ([custom_name, storageId])  
}